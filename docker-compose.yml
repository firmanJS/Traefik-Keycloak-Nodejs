version: "3.3"
volumes:
  postgres_data:
      driver: local
services:

  traefik:
    image: "traefik:v2.0.0-rc3"
    container_name: "traefik"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=true"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  
  postgres_keycloak:
      image: postgres
      volumes:
        - postgres_data:/var/lib/postgresql/data
      ports:
      - "5432:5432"
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
        
  keycloak:
      image: jboss/keycloak
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres_keycloak
        DB_PORT: 5432
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
      depends_on:
        - postgres_keycloak
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.keycloak.rule=Host(`keycloak.localhost`)"
        - "traefik.http.routers.keycloak.entrypoints=web"

  keycloak-gatekeeper:
    image: keycloak/keycloak-gatekeeper:7.0.0
    labels:
     - "traefik.port=3000"
     - "traefik.frontend.rule=Host:user-service.localhost"
     - "traefik.protocol=http"
    restart: always
    depends_on: 
     - keycloak
    external_links:
      - traefik:keycloak.localhost
    volumes:
      - ./keycloak-gatekeeper/keycloak-gatekeeper.conf:/etc/keycloak-gatekeeper.conf
    entrypoint:
      - /opt/keycloak-gatekeeper
      - --config=/etc/keycloak-gatekeeper.conf

  user-service:
    build:
      context: ./service/user
      dockerfile: Dockerfile
    volumes:
      - ./service/user:/app  
    depends_on: 
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.rule=Host(`user-service.localhost`)"
      - "traefik.http.routers.user-service.entrypoints=web"
      # - "traefik.http.routers.api.middlewares=auth"
      # - "traefik.http.routers.api.service=api@internal"